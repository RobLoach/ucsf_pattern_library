/*------------------------------------*\
    BASE
\*------------------------------------*/

* {
  @include box-sizing(border-box);
}

/**
 * Where `margin-bottom` is concerned, this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
/**
 * Base elements
 */
.form-fields > li {
  margin-bottom: 24px;
  margin-bottom: 1.71429rem; }
.islet .form-fields > li {
  margin-bottom: 12px;
  margin-bottom: 0.85714rem; }

/**
 * Doubled up `margin-bottom` helper class.
 */
.landmark {
  margin-bottom: 48px;
  margin-bottom: 3.42857rem; }

/**
 * `hr` elements only take up a few pixels, so we need to give them special
 * treatment regarding vertical rhythm.
 */
hr {
  margin-bottom: 22px;
  margin-bottom: 1.57143rem; }

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once, here.
 */
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3.42857rem; }

/**
 * Base styles; unclassed HTML elements etc.
 */
/*------------------------------------*\
    $MAIN
\*------------------------------------*/
html {
  font: 0.875em/1.71429 "HelveticaNeueLTStd-Roman";
  overflow-y: scroll;
  min-height: 100%; }

/*------------------------------------*\
    $PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger.
 */
.lede, .lead {
  font-size: 15.75px;
  font-size: 1.125rem;
  line-height: 1.52381; }

/*------------------------------------*\
    $SMALLPRINT
\*------------------------------------*/
/**
 * A series of classes for setting tiny type; for use in smallprint etc.
 */
.smallprint, .milli {
  font-size: 13px;
  font-size: 0.92857rem;
  line-height: 1.84615; }

.micro {
  font-size: 12px;
  font-size: 0.85714rem;
  line-height: 2; }

/*------------------------------------*\
    $QUOTES
\*------------------------------------*/
/**
 * If English quotes are set in `_vars.scss`, define them here.
 */
/**
 * Big up @boblet: html5doctor.com/blockquote-q-cite
 */
/**
 * Inline quotes.
 */
q {
  quotes: "\2018" "\2019" "\201C" "\201D"; }
q:before {
  content: "\2018";
  content: open-quote; }
q:after {
  content: "\2019";
  content: close-quote; }
q q:before {
  content: "\201C";
  content: open-quote; }
q q:after {
  content: "\201D";
  content: close-quote; }

blockquote {
  quotes: "\201C" "\201D"; }
blockquote p:before {
  content: "\201C";
  content: open-quote; }
blockquote p:after {
  content: "";
  content: no-close-quote; }
blockquote p:last-of-type:after {
  content: "\201D";
  content: close-quote; }
blockquote q:before {
  content: "\2018";
  content: open-quote; }
blockquote q:after {
  content: "\2019";
  content: close-quote; }

/**
 *
   <blockquote>
       <p>Insanity: doing the same thing over and over again and expecting
       different results.</p>
       <b class=source>Albert Einstein</b>
   </blockquote>
 *
 */
blockquote {
  /**
     * .4em is roughly equal to the width of the opening â€œ that we wish to hang.
     */
  text-indent: -0.41em; }
blockquote p:last-of-type {
  margin-bottom: 0; }

.source {
  display: block;
  text-indent: 0; }
.source:before {
  content: "\2014"; }

/*------------------------------------*\
    $CODE
\*------------------------------------*/
/**
 * Use an explicit font stack to ensure browsers render correct `line-height`.
 */
pre {
  overflow: auto; }

pre mark {
  background: none;
  border-bottom: 1px solid;
  color: inherit; }

/**
 * Add comments to your code examples, e.g.:
 *
   <code>&lt;/div&gt;<span class=code-comment>&lt;!-- /wrapper --&gt;</span></code>
 *
 */
.code-comment {
  /**
     * Override this setting in your theme stylesheet
     */
  opacity: 0.75;
  filter: alpha(opacity=75); }

/**
 * You can add line numbers to your code examples but be warned, it requires
 * some pretty funky looking markup, e.g.:
 *
   <ol class=line-numbers>
       <li><code>.nav{</code></li>
       <li><code>    list-style:none;</code></li>
       <li><code>    margin-left:0;</code></li>
       <li><code>}</code></li>
       <li><code>    .nav > li,</code></li>
       <li><code>        .nav > li > a{</code></li>
       <li><code>            display:inline-block;</code></li>
       <li><code>           *display:inline-block;</code></li>
       <li><code>            zoom:1;</code></li>
       <li><code>        }</code></li>
   </ol>
 *
 * 1. Make the list look like code.
 * 2. Give the list flush numbers with a leading zero.
 * 3. Make sure lines of code donâ€™t wrap.
 * 4. Give the code form by forcing the `code` to honour white-space.
 */
.line-numbers {
  font-family: monospace, serif;
  /* [1] */
  list-style: decimal-leading-zero inside;
  /* [2] */
  white-space: nowrap;
  /* [3] */
  overflow: auto;
  /* [3] */
  margin-left: 0; }

.line-numbers code {
  white-space: pre;
  /* [4] */ }